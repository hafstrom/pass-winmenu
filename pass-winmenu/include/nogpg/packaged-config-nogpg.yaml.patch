--- ../embedded/default-config.yaml	2017-09-16 02:58:14.881860600 +0200
+++ packaged-config-nogpg.yaml	2017-09-18 00:04:45.797181600 +0200
@@ -1,210 +1,210 @@
-# This is the default configuration file for pass-winmenu.
-# If your password store is is located at %userprofile%\.password-store
-# and GPG (not GPG4win) is installed on your computer, this settings file will
-# work out of the box. Otherwise, you'll have to tweak it a bit.
-
-# All values in this file are set to pass-winmenu's default settings,
-# so feel free to delete them from this file; they're only here
-# for your reference.
-password-store: '%userprofile%\.password-store'
-# A regex string against which all filenames in the password directory are
-# compared. All matching files are considered password files.
-password-file-match: '.*\.gpg$'
-
-# Path to your gpg.exe. If set to its default of null, pass-winmenu
-# will try to look for the file in its default location.
-# If you have added GPG to your PATH, you can also set this to 'gpg'.
-gpg-path: null
-# If the GNUPGHOME environment variable is set, GPG will use that path to
-# store its keys and settings. Otherwise, GPG will choose its own location.
-# If you are unable to alter the GNUPGHOME environment variable (or if you
-# have a separate GPG homedir that isn't related to the one used for your
-# password files), you can have pass-winmenu pass along a custom value
-# to GPG. For example, like so:
-#   gnupghome-override: '%userprofile%\.gnupg'
-# This normally shouldn't be necessary.
-# The GNUPGHOME environment variable is not overridden when the value is null.
-gnupghome-override: null
-
-# Gpg-agent can have a pretty long startup time on Windows. This option allows
-# the gpg-agent to be started alongside pass-winmenu so it'll be ready when
-# you need it.
-preload-gpg-agent: true
-
-# Pass-winmenu will automatically commit new and changed passwords if it
-# detects that your password store is a git repository, as well as providing
-# options for pushing to/pulling from the remote repository.
-# You can disable this feature by setting the following option to false:
-use-git: true
-# Either 'builtin' or 'native-git'. 'builtin', the default option, will use
-# the Git library to sync your password repository. This library, however,
-# has several limitations. For instance, SSH remotes are not supported.
-# By setting this value to 'native-git', pass-winmenu will use your native
-# Git installation instead, 
-sync-mode: builtin
-# Path to the Git executable that should be used. Only used when sync-mode
-# is set to 'native-git'.
-git-path: git
-
-
-# Amount of time (in seconds) your passwords should remain on the clipboard.
-clipboard-timeout: 30
-# The directory separator that will be used to separate directories and files
-# in the password menu. It's purely a visual indicator, so it can be set to
-# whatever character (or sequence of characters) you like.
-directory-separator: '/'
-# Only consider the first line in the password file to be the actual password;
-# all other lines are considered metadata. This is the recommended behaviour, 
-# as many password managers for pass will work the same way.
-first-line-only: true
-# If set to true, the menu will be opened on the same screen the mouse cursor
-# is currently on. If set to false, it will be opened on the primary screen.
-follow-cursor: true
-
-output:
-    # If your keyboard has dead keys enabled (type ' + e for Ã©), this should
-    # be set to true, otherwise usernames/passwords might not be entered
-    # correctly.
-    dead-keys: false
-
-# Here you can map hotkeys to various actions. Supported actions are:
-# - decrypt-password
-# - add-password
-# - edit-password
-# - git-pull
-# - git-push
-# Actions can be further configured using the 'options' variable.
-# Valid options for 'decrypt-password' are:
-# - copy-to-clipboard: (true/false)
-# - type-username: (true/false)
-# - type-password: (true/false)
-# The other actions currently have no configurable options.
-#
-# The default configuration has one hotkey for copying the password to your
-# clipboard, and one hotkey for automatically entering your username and
-# password into the topmost window.
-hotkeys:
-  - 
-    hotkey: 'ctrl alt p'
-    action: 'decrypt-password'
-    options:
-        copy-to-clipboard: true
-        type-username: false
-        type-password: false
-  - 
-    hotkey: 'ctrl alt shift p'
-    action: 'decrypt-password'
-    options:
-        copy-to-clipboard: true
-        type-username: true
-        type-password: true
-    # Example configuration of an 'add password' hotkey. Uncomment to enable.
-#  - 
-#    hotkey: 'ctrl alt o'
-#    action: 'add-password'
-
-password-editor:
-    # Use the built-in password editor. You can set this to false if you want
-    # to use a different text editor instead. In that case, pass-winmenu will
-    # launch your default text editor for .txt files.
-    use-builtin: true
-
-password-generation:
-    # This template allows you to alter the default extra content that's
-    # added to new password files. Note that this is a multiline string;
-    # any leading spaces will be ignored.
-    # A few variables can be inserted into the string:
-    #  - $filename (The name of the password file, without .gpg extension
-    #               and without its path.)
-    #  - $date     (The current date, formatted as yyyy-MM-dd)
-    #  - $time     (The current time, formatted as HH:mm:ss)
-    default-content: |
-        Username: 
-    # Example configuration (uncomment to enable):
-#    default-content: |
-#        Username: $filename
-#        Created: $date $time
-
-# If you have added a hotkey where pass-winmenu enters a username and
-# a password, you can choose here how you want the application to determine
-# the correct username. Uncomment whichever method you prefer to enable it.
-# Make sure the other methods are commented out!
-username-detection:
-    # Use the filename of the password file as the username
-#    method: 'filename'
-
-    # Read the text on a specified line in the password file and use that
-    # as the username. Note that reading line number 1 (the password line)
-    # is not supported.
-#    method: 'line-number'
-#    options:
-#        line-number: 2
-
-    # Use a regex to extract the username from the password file.
-    # The username should be placed in a capturing group named 'username',
-    # which can be done by putting ?<username> at the beginning of the
-    # capturing group.
-    method: 'regex'
-    options:
-        regex: '^[Uu]sername: ((?<username>.*)\r|(?<username>.*))$'
-        regex-options:
-            ignore-case: false
-            multiline: true
-            singleline: false
-
-# Notification-related settings.
-notifications:
-    # Set this to false to disable all notifications. Because this suppresses
-    # error notifications as well, it is usually better to disable
-    # notifications by type, using the 'types' setting below.
-    enabled: true
-    # Send a notification when...
-    types:
-        # ...a password is copied to the clipboard:
-        password-copied: true
-        # ...a new password has been generated:
-        password-generated: true
-        # ...a password has been edited:
-        password-updated: true
-        # ...changes are pushed to Git
-        git-push: true
-        # ...changes are pulled from Git
-        git-pull: true
-        # ...the Git remote uses SSH, but no SSH key could be found
-        no-ssh-key-found: true
-
-# Style settings.
-# All colour strings must be formatted as hexadecimal ARGB strings,
-# such as #AA00FF44. To 'unset' a colour, a fully transparent colour
-# can be used, which is any colour starting with #00.
-style:
-    orientation: 'vertical'
-    font-size: 14
-    font-family: 'Consolas'
-    background-colour: '#FF202020'
-    border-colour: '#FFD88900'
-    caret-colour: '#FFDDDDDD'
-    # Offset and dimensions of the menu.
-    offset-left: 40%
-    offset-top: 40%
-    width: 20%
-    height: 20%
-
-    # This determines the styling of the search text.
-    search:
-        text-colour: '#FFDDDDDD'
-        background-colour: '#00FFFFFF'
-        border-colour: '#FF000000'
-        border-width: 0
-    # This determines the styling of all unselected options.
-    options:
-        text-colour: '#FFDDDDDD'
-        background-colour: '#00FFFFFF'
-        border-colour: '#FF000000'
-        border-width: 0
-    # This determines the styling of the current selection.
-    selection:
-        text-colour: '#FFFFFFFF'
-        background-colour: '#FFD88900'
-        border-colour: '#FF000000'
-        border-width: 0
+# This is the default configuration file for pass-winmenu.
+# If your password store is is located at %userprofile%\.password-store
+# and GPG is reachable from your PATH, this settings file will
+# work out of the box. Otherwise, you'll have to tweak it a bit.
+
+# All values in this file are set to pass-winmenu's default settings,
+# so feel free to delete them from this file; they're only here
+# for your reference.
+password-store: '%userprofile%\.password-store'
+# A regex string against which all filenames in the password directory are
+# compared. All matching files are considered password files.
+password-file-match: '.*\.gpg$'
+
+# Path to your gpg.exe. If set to its default of null, pass-winmenu
+# will try to look for the file in its default location.
+# If you have added GPG to your PATH, you can also set this to 'gpg'.
+gpg-path: 'gpg'
+# If the GNUPGHOME environment variable is set, GPG will use that path to
+# store its keys and settings. Otherwise, GPG will choose its own location.
+# If you are unable to alter the GNUPGHOME environment variable (or if you
+# have a separate GPG homedir that isn't related to the one used for your
+# password files), you can have pass-winmenu pass along a custom value
+# to GPG. For example, like so:
+#   gnupghome-override: '%userprofile%\.gnupg'
+# This normally shouldn't be necessary.
+# The GNUPGHOME environment variable is not overridden when the value is null.
+gnupghome-override: null
+
+# Gpg-agent can have a pretty long startup time on Windows. This option allows
+# the gpg-agent to be started alongside pass-winmenu so it'll be ready when
+# you need it.
+preload-gpg-agent: true
+
+# Pass-winmenu will automatically commit new and changed passwords if it
+# detects that your password store is a git repository, as well as providing
+# options for pushing to/pulling from the remote repository.
+# You can disable this feature by setting the following option to false:
+use-git: true
+# Either 'builtin' or 'native-git'. 'builtin', the default option, will use
+# the Git library to sync your password repository. This library, however,
+# has several limitations. For instance, SSH remotes are not supported.
+# By setting this value to 'native-git', pass-winmenu will use your native
+# Git installation instead, 
+sync-mode: builtin
+# Path to the Git executable that should be used. Only used when sync-mode
+# is set to 'native-git'. 
+git-path: git
+
+
+# Amount of time (in seconds) your passwords should remain on the clipboard.
+clipboard-timeout: 30
+# The directory separator that will be used to separate directories and files
+# in the password menu. It's purely a visual indicator, so it can be set to
+# whatever character (or sequence of characters) you like.
+directory-separator: '/'
+# Only consider the first line in the password file to be the actual password;
+# all other lines are considered metadata. This is the recommended behaviour, 
+# as many password managers for pass will work the same way.
+first-line-only: true
+# If set to true, the menu will be opened on the same screen the mouse cursor
+# is currently on. If set to false, it will be opened on the primary screen.
+follow-cursor: true
+
+output:
+    # If your keyboard has dead keys enabled (type ' + e for Ã©), this should
+    # be set to true, otherwise usernames/passwords might not be entered
+    # correctly.
+    dead-keys: false
+
+# Here you can map hotkeys to various actions. Supported actions are:
+# - decrypt-password
+# - add-password
+# - edit-password
+# - git-pull
+# - git-push
+# Actions can be further configured using the 'options' variable.
+# Valid options for 'decrypt-password' are:
+# - copy-to-clipboard: (true/false)
+# - type-username: (true/false)
+# - type-password: (true/false)
+# The other actions currently have no configurable options.
+#
+# The default configuration has one hotkey for copying the password to your
+# clipboard, and one hotkey for automatically entering your username and
+# password into the topmost window.
+hotkeys:
+  - 
+    hotkey: 'ctrl alt p'
+    action: 'decrypt-password'
+    options:
+        copy-to-clipboard: true
+        type-username: false
+        type-password: false
+  - 
+    hotkey: 'ctrl alt shift p'
+    action: 'decrypt-password'
+    options:
+        copy-to-clipboard: true
+        type-username: true
+        type-password: true
+    # Example configuration of an 'add password' hotkey. Uncomment to enable.
+#  - 
+#    hotkey: 'ctrl alt o'
+#    action: 'add-password'
+
+password-editor:
+    # Use the built-in password editor. You can set this to false if you want
+    # to use a different text editor instead. In that case, pass-winmenu will
+    # launch your default text editor for .txt files.
+    use-builtin: true
+
+password-generation:
+    # This template allows you to alter the default extra content that's
+    # added to new password files. Note that this is a multiline string;
+    # any leading spaces will be ignored.
+    # A few variables can be inserted into the string:
+    #  - $filename (The name of the password file, without .gpg extension
+    #               and without its path.)
+    #  - $date     (The current date, formatted as yyyy-MM-dd)
+    #  - $time     (The current time, formatted as HH:mm:ss)
+    default-content: |
+        Username: 
+    # Example configuration (uncomment to enable):
+#    default-content: |
+#        Username: $filename
+#        Created: $date $time
+
+# If you have added a hotkey where pass-winmenu enters a username and
+# a password, you can choose here how you want the application to determine
+# the correct username. Uncomment whichever method you prefer to enable it.
+# Make sure the other methods are commented out!
+username-detection:
+    # Use the filename of the password file as the username
+#    method: 'filename'
+
+    # Read the text on a specified line in the password file and use that
+    # as the username. Note that reading line number 1 (the password line)
+    # is not supported.
+#    method: 'line-number'
+#    options:
+#        line-number: 2
+
+    # Use a regex to extract the username from the password file.
+    # The username should be placed in a capturing group named 'username',
+    # which can be done by putting ?<username> at the beginning of the
+    # capturing group.
+    method: 'regex'
+    options:
+        regex: '^[Uu]sername: ((?<username>.*)\r|(?<username>.*))$'
+        regex-options:
+            ignore-case: false
+            multiline: true
+            singleline: false
+
+# Notification-related settings.
+notifications:
+    # Set this to false to disable all notifications. Because this suppresses
+    # error notifications as well, it is usually better to disable
+    # notifications by type, using the 'types' setting below.
+    enabled: true
+    # Send a notification when...
+    types:
+        # ...a password is copied to the clipboard:
+        password-copied: true
+        # ...a new password has been generated:
+        password-generated: true
+        # ...a password has been edited:
+        password-updated: true
+        # ...changes are pushed to Git
+        git-push: true
+        # ...changes are pulled from Git
+        git-pull: true
+        # ...the Git remote uses SSH, but no SSH key could be found
+        no-ssh-key-found: true
+
+# Style settings.
+# All colour strings must be formatted as hexadecimal ARGB strings,
+# such as #AA00FF44. To 'unset' a colour, a fully transparent colour
+# can be used, which is any colour starting with #00.
+style:
+    orientation: 'vertical'
+    font-size: 14
+    font-family: 'Consolas'
+    background-colour: '#FF202020'
+    border-colour: '#FFD88900'
+    caret-colour: '#FFDDDDDD'
+    # Offset and dimensions of the menu.
+    offset-left: 40%
+    offset-top: 40%
+    width: 20%
+    height: 20%
+
+    # This determines the styling of the search text.
+    search:
+        text-colour: '#FFDDDDDD'
+        background-colour: '#00FFFFFF'
+        border-colour: '#FF000000'
+        border-width: 0
+    # This determines the styling of all unselected options.
+    options:
+        text-colour: '#FFDDDDDD'
+        background-colour: '#00FFFFFF'
+        border-colour: '#FF000000'
+        border-width: 0
+    # This determines the styling of the current selection.
+    selection:
+        text-colour: '#FFFFFFFF'
+        background-colour: '#FFD88900'
+        border-colour: '#FF000000'
+        border-width: 0
